public class CreateDailyLineItemsController {
    
    @AuraEnabled
    public static List<Project_Resource_Mapping__c> searchProjects(String recordId){
        List<Project_Resource_Mapping__c> lineiItemsList = new List<Project_Resource_Mapping__c>();
        
        lineiItemsList = [Select Id, Name, Project__r.Name From Project_Resource_Mapping__c where id = :recordId];
        system.debug('lineiItemsList-->'+lineiItemsList);
        return lineiItemsList;
    }
    
    @AuraEnabled
    public static List<Time_Entry_Line_Items__c> getDailyLineItems(String recordId){
        List<Time_Entry_Line_Items__c> lineiItemsList = new List<Time_Entry_Line_Items__c>();
        
        lineiItemsList = [Select Id, Name, Allocated_Hours__c, Consumed_Hours__c, Is_Completed__c, Date_Of_Work__c,Task_Description__c, Time_Entry_Daily_Card__c, Project_Resource_Mapping__c,Project_Resource_Mapping__r.Project__r.Name From Time_Entry_Line_Items__c];
        Time_Entry_Line_Items__c dailyLineItemsRec = new Time_Entry_Line_Items__c();
        lineiItemsList.add(dailyLineItemsRec);
        
        system.debug('lineiItemsList-->'+lineiItemsList);
        return lineiItemsList;
    }
    
    @AuraEnabled
    public static string saveDailyLineItems(List<Time_Entry_Line_Items__c> lineiItemsList,String ContactId){
        try{
            integer numberOfWeek = 0;
            Time_Entry_Daily_Card__c tedc = new Time_Entry_Daily_Card__c();
            List<String> PRMIds = new List<String>();
            //Map<String,List<Time_Entry_Monthly_Card__c>> monthlyCardsByPRMId = new Map<String,List<Time_Entry_Monthly_Card__c>>();
            Map<String,String> dailyTimeCardByPRMId= new Map<String,String>();
            Map<String,String> monthlyCardsByPRMId = new Map<String,String>();
            Map<String,String> WeeklyCardsByMonthlycardId = new Map<String,String>();
            Map<String,String> dailyCardsByWeeklycardId = new Map<String,String>();
            Map<String,map<date,Time_Entry_Daily_Card__c>> dailyCardsByPRMId = new Map<String,map<date,Time_Entry_Daily_Card__c>>();
            List<Time_Entry_Line_Items__c> newLineiItemsList = new List<Time_Entry_Line_Items__c>();
            //Map<String,String> monthlyCardsByPRMId = new Map<String,String>();
            
            //Logic for how many weeks are Remaining
            Date d = System.today();
            Datetime dt = (DateTime)d;
            String dayOfWeek = dt.format('EEEE'); //This returns - Monday, Tuesday, Wednesday, etc..
            system.debug( 'dayOfWeek is '+ dayOfWeek );
            
            //Number of days Remaining..
            Date startDate = system.today();
            Date firstDayOfMonth = System.today().toStartOfMonth();
            Date endDate = firstDayOfMonth.addDays(Date.daysInMonth(firstDayOfMonth.year(), firstDayOfMonth.month()) - 1);
            Integer noOfDaysRemaining = startDate.daysBetween( endDate );
            system.debug( 'noOfDaysRemaining is '+ noOfDaysRemaining );
            
            if(noOfDaysRemaining > 21 && noOfDaysRemaining < 29){
                numberOfWeek = 1;
            }else if(noOfDaysRemaining > 14 && noOfDaysRemaining < 22){
                numberOfWeek = 2;
            }else if(noOfDaysRemaining > 7 && noOfDaysRemaining < 15){
                numberOfWeek = 3;
            }else{
                numberOfWeek = 4;
            }
            system.debug('numberOfWeek'+numberOfWeek);
            String weekName = 'Week - '+numberOfWeek;
            
            for(Time_Entry_Line_Items__c teli : lineiItemsList){
                if(teli.Project_Resource_Mapping__c != null){
                    PRMIds.add(teli.Project_Resource_Mapping__c);    
                }
                
            }
            system.debug('PRMIds'+PRMIds);
            
            List<Time_Entry_Daily_Card__c> existingDailyCards = [SELECT Id,Name,Time_Entry_Weekly_Card__c,PRM_Id__c,Date_Of_Work__c,Total_Hours_Consumed__c FROM Time_Entry_Daily_Card__c where PRM_Id__c IN :PRMIds];
            system.debug('existingDailyCards'+existingDailyCards);
            for(Time_Entry_Daily_Card__c ted : existingDailyCards){
                if(dailyCardsByPRMId.containsKey(ted.PRM_Id__c)){
                    dailyCardsByPRMId.get(ted.PRM_Id__c).put(ted.Date_Of_Work__c,ted);
                }else{
                    map<date,Time_Entry_Daily_Card__c> dailyCardbyDate = new map<date,Time_Entry_Daily_Card__c>();
                    dailyCardbyDate.put(ted.Date_Of_Work__c,ted);
                    dailyCardsByPRMId.put(ted.PRM_Id__c,dailyCardbyDate);
                }
            }
            system.debug('dailyCardsByPRMId'+dailyCardsByPRMId);
            
            for(Time_Entry_Line_Items__c tel : lineiItemsList){
                system.debug('tel.Id'+tel.Id);
                if(tel.Id != null ){
                    system.debug('Coming here');
                    newLineiItemsList.add(tel);
                }else{
                    system.debug('dailyCardsByPRMId.get(tel.Project_Resource_Mapping__c).get(tel.Date_Of_Work__c)'+dailyCardsByPRMId.get(tel.Project_Resource_Mapping__c).get(tel.Date_Of_Work__c));
                    if(dailyCardsByPRMId.get(tel.Project_Resource_Mapping__c).get(tel.Date_Of_Work__c) != null && string.valueOf(dailyCardsByPRMId.get(tel.Project_Resource_Mapping__c).get(tel.Date_Of_Work__c)) != ''){
                        system.debug('Id is :'+dailyCardsByPRMId.get(tel.Project_Resource_Mapping__c).get(tel.Date_Of_Work__c).Id);
                        Time_Entry_Line_Items__c newLineItem = tel.clone(false);
                        //getting from the Map the Daily Entry Lookup
                        newLineItem.Time_Entry_Daily_Card__c = dailyCardsByPRMId.get(tel.Project_Resource_Mapping__c).get(tel.Date_Of_Work__c).Id;   
                        system.debug('newLineItem'+newLineItem);
                        newLineiItemsList.add(newLineItem);
                    }    
                }
            }
            system.debug('lineiItemsList'+lineiItemsList);
            upsert newLineiItemsList;
            return 'SUCCESS';
        }catch(Exception e){
            system.debug('Exception @'+e.getLineNumber());
            throw new AuraHandledException(e.getMessage());
        }
    }
    
    @AuraEnabled
    public static String batchMethod(List<Time_Entry_Line_Items__c> lineiItemsList,String ContactId){
        
         try{
            integer numberOfWeek = 0;
            Time_Entry_Daily_Card__c tedc = new Time_Entry_Daily_Card__c();
            List<String> PRMIds = new List<String>();
            //Map<String,List<Time_Entry_Monthly_Card__c>> monthlyCardsByPRMId = new Map<String,List<Time_Entry_Monthly_Card__c>>();
            Map<String,String> dailyTimeCardByPRMId= new Map<String,String>();
            Map<String,String> monthlyCardsByPRMId = new Map<String,String>();
            Map<String,String> WeeklyCardsByMonthlycardId = new Map<String,String>();
            Map<String,String> dailyCardsByWeeklycardId = new Map<String,String>();
            //Map<String,String> monthlyCardsByPRMId = new Map<String,String>();
            
            //Logic for how many weeks are Remaining
            Date d = System.today();
            Datetime dt = (DateTime)d;
            String dayOfWeek = dt.format('EEEE'); //This returns - Monday, Tuesday, Wednesday, etc..
            system.debug( 'dayOfWeek is '+ dayOfWeek );
            
            //Number of days Remaining..
            Date startDate = system.today();
            Date firstDayOfMonth = System.today().toStartOfMonth();
            Date endDate = firstDayOfMonth.addDays(Date.daysInMonth(firstDayOfMonth.year(), firstDayOfMonth.month()) - 1);
            Integer noOfDaysRemaining = startDate.daysBetween( endDate );
            system.debug( 'noOfDaysRemaining is '+ noOfDaysRemaining );
            
            if(noOfDaysRemaining > 21 && noOfDaysRemaining < 29){
                numberOfWeek = 1;
            }else if(noOfDaysRemaining > 14 && noOfDaysRemaining < 22){
                numberOfWeek = 2;
            }else if(noOfDaysRemaining > 7 && noOfDaysRemaining < 15){
                numberOfWeek = 3;
            }else{
                numberOfWeek = 4;
            }
            system.debug('numberOfWeek'+numberOfWeek);
            String weekName = 'Week - '+numberOfWeek;
            
            for(Time_Entry_Line_Items__c teli : lineiItemsList){
                if(teli.Project_Resource_Mapping__c != null){
                    PRMIds.add(teli.Project_Resource_Mapping__c);    
                }
            }
            system.debug('PRMIds'+PRMIds);
            //Getting the Time Entry monthly cards for PRM ;
            List<Time_Entry_Monthly_Card__c> monthlyCardList = [SELECT Id,Name,Project_Resource_Mapping__c,Project_Resource_Mapping__r.Project__r.Name FROM Time_Entry_Monthly_Card__c where Project_Resource_Mapping__c IN :PRMIds ORDER BY CreatedDate ASC];
            
            for(Time_Entry_Monthly_Card__c tem : monthlyCardList){
                monthlyCardsByPRMId.put(tem.Project_Resource_Mapping__c,tem.Id);
            }
            
            //getting week time entry for monthly card
            List<Time_Entry_Weekly_Card__c> weeklyCardList = [SELECT Id,Name,Time_Entry_Monthly_Card__c FROM Time_Entry_Weekly_Card__c where Time_Entry_Monthly_Card__c IN :monthlyCardsByPRMId.values() AND name =:weekName ORDER BY CreatedDate ASC  ];
            
            for(Time_Entry_Weekly_Card__c tew : weeklyCardList){
                WeeklyCardsByMonthlycardId.put(tew.Time_Entry_Monthly_Card__c,tew.Id);
            }
            system.debug('WeeklyCardsByMonthlycardId'+WeeklyCardsByMonthlycardId);
            
            //List<Time_Entry_Weekly_Card__c> weeklyCardList = [SELECT Id,Name,Time_Entry_Monthly_Card__c  FROM Time_Entry_Weekly_Card__c where Time_Entry_Monthly_Card__c  = :monthlyCardList[0].Id And name = :weekName];
            //system.debug('weeklyCardList'+weeklyCardList);
            
            List<Time_Entry_Daily_Card__c> existingDailyCards = [SELECT Id,Name,Time_Entry_Weekly_Card__c,Total_Hours_Consumed__c FROM Time_Entry_Daily_Card__c where Time_Entry_Weekly_Card__c IN :WeeklyCardsByMonthlycardId.values() and CreatedDate = :(system.today())];
            for(Time_Entry_Daily_Card__c tew : existingDailyCards){
                dailyCardsByWeeklycardId.put(tew.Time_Entry_Weekly_Card__c,tew.Id);
            }
            system.debug('WeeklyCardsByMonthlycardId'+WeeklyCardsByMonthlycardId);
            
            for(String prmid : PRMIds){
                if(dailyCardsByWeeklycardId.get(WeeklyCardsByMonthlycardId.get(monthlyCardsByPRMId.get(prmid))) != null && dailyCardsByWeeklycardId.get(WeeklyCardsByMonthlycardId.get(monthlyCardsByPRMId.get(prmid))) != ''){
                    dailyTimeCardByPRMId.put(prmid,dailyCardsByWeeklycardId.get(WeeklyCardsByMonthlycardId.get(monthlyCardsByPRMId.get(prmid))));
                }else{
                    tedc.Name = dayOfWeek + ' : '+monthlyCardList[0].Project_Resource_Mapping__r.Project__r.Name + ' Work';
                    tedc.Time_Entry_Weekly_Card__c = weeklyCardList[0].Id;
                    insert tedc;
                    dailyTimeCardByPRMId.put(prmid,tedc.Id);
                }
            }
            
            system.debug('dailyTimeCardByPRMId'+dailyTimeCardByPRMId);
            
            for(Time_Entry_Line_Items__c tel : lineiItemsList){
                tel.Time_Entry_Daily_Card__c = dailyTimeCardByPRMId.get(tel.Project_Resource_Mapping__c);
            }
            system.debug('lineiItemsList'+lineiItemsList);
            //upsert lineiItemsList;
            return 'SUCCESS';
        }catch(Exception e){
            system.debug('Exception @'+e.getLineNumber());
            throw new AuraHandledException(e.getMessage());
        }
    }
    public Static void TestCoverage(){
        integer i = 0 ;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
    }
}