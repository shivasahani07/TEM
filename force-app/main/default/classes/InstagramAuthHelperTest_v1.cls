@isTest
public class InstagramAuthHelperTest_v1 {
    /*static testmethod void testsample(){  
        Case caseRec = new Case();
        caseRec.Tweet_Id__c = 'tweetId';
        insert caserec;
        
        Post_Comments__c postComment = new Post_Comments__c();
        postComment.Case__c= caserec.Id;
        postComment.Comment_Id__c = 'commentId';
        postComment.Replied_Comments__c = 'RepliesWrapper:[data=(ReplyData:[id=123, text=Test Reply 1, username=testuser1, timeStamp=2023-07-29T12:34:56+0000,Case__c=caseId])])';
		insert postComment;
        
        Test.startTest();
        Test.setMock(HttpCalloutMock.class, new InstagramAuthHelperTest_v1_MockTest());
        InstagramAuthHelper.getAllPostsFromInstaForUserId();
        Test.stopTest();
    }
    
    static testmethod void getHashtagIdFromInsta_test(){  
        Test.startTest();
        Test.setMock(HttpCalloutMock.class, new InstagramAuthHelperTest_v1_MockTest());
        InstagramAuthHelper.getHashtagIdFromInsta('INSTA');
        Test.stopTest();
    }
    static testmethod void getPostDetailsByHashTagId_test(){  
        Test.startTest();
        Test.setMock(HttpCalloutMock.class, new InstagramAuthHelperTest_v1_MockTest());
        InstagramAuthHelper.getPostDetailsByHashTagId('INSTA');
        Test.stopTest();
    }
    static testmethod void getAllDetailsOfComments_test(){  
        Test.startTest();
        Test.setMock(HttpCalloutMock.class, new InstagramAuthHelperTest_v1_MockTest());
        InstagramAuthHelper.getAllDetailsOfComments('INSTA');
        Test.stopTest();
    }
    static testmethod void getAllDetailsOfMedia_test(){  
        Case caseRec = new Case();
        caseRec.Tweet_Id__c = 'tweetId';
        insert caserec;
        
        Post_Comments__c postComment = new Post_Comments__c();
        postComment.Case__c= caserec.Id;
        postComment.Comment_Id__c = 'commentId';
		insert postComment;
        
        Test.startTest();
        Test.setMock(HttpCalloutMock.class, new InstagramAuthHelperTest_v1_MockTest());
        InstagramAuthHelper.getAllDetailsOfMedia('INSTA');
        Test.stopTest();
    }
    static testmethod void getRepliesDetails_test(){  
        Case caseRec = new Case();
        caseRec.Tweet_Id__c = 'tweetId';
        insert caserec;
        
        Post_Comments__c postComment = new Post_Comments__c();
        postComment.Case__c= caserec.Id;
        postComment.Comment_Id__c = 'commentId';
        postComment.Replied_Comments__c = 'RepliesWrapper:[data=(ReplyData:[id=123, text=Test Reply 1, username=testuser1, timeStamp=2023-07-29T12:34:56+0000,Case__c=caseId])])';
		insert postComment;
        
        Test.startTest();
        //Test.setMock(HttpCalloutMock.class, new InstagramAuthHelperTest_v1_MockTest());
        InstagramAuthHelper.getRepliesDetails('commentId');
        Test.stopTest();
    }
     static testmethod void getCaseDetails_test(){  
        Case caseRec = new Case();
        caseRec.Tweet_Id__c = 'tweetId';
        insert caserec;
        
        Post_Comments__c postComment = new Post_Comments__c();
        postComment.Case__c= caserec.Id;
        postComment.Comment_Id__c = 'commentId';
        postComment.Replied_Comments__c = 'RepliesWrapper:[data=(ReplyData:[id=123, text=Test Reply 1, username=testuser1, timeStamp=2023-07-29T12:34:56+0000,Case__c=caseId])])';
		insert postComment;
        
        Test.startTest();
        //Test.setMock(HttpCalloutMock.class, new InstagramAuthHelperTest_v1_MockTest());
        InstagramAuthHelper.getCaseDetails(caserec.Id);
        Test.stopTest();
    }
    static testmethod void replyToComment_test(){  
        Case caseRec = new Case();
        caseRec.Tweet_Id__c = 'tweetId';
        insert caserec;
        
        Post_Comments__c postComment = new Post_Comments__c();
        postComment.Case__c= caserec.Id;
        postComment.Comment_Id__c = 'commentId';
        //postComment.Replied_Comments__c = 'RepliesWrapper:[data=(ReplyData:[id=123, text=Test Reply 1, username=testuser1, timeStamp=2023-07-29T12:34:56+0000,Case__c=caseId])])';
		insert postComment;
        
        Test.startTest();
        //Test.setMock(HttpCalloutMock.class, new InstagramAuthHelperTest_v1_MockTest());
        InstagramAuthHelper.replyToComment('commentId','comment for test (');
        Test.stopTest();
    }*/
    
}